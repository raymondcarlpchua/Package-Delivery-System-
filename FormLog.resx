<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAQQAAAEECAIAAABBat1dAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAB4rSURBVHhe7Z0JeBXV3cbFr+DyPf3qZyWAloSgn1q1IQtr
        +aqttaVCsW4gbpUWgbK6IC6IWkURsGJAAhXBFoXaulUBwyYIAhHIAgkECJAECAQICRBCgIQE+849N8Nw
        t1nuMufeeXnOw5PcnJk588/7O+//LDO5oM3TBSwiAm3H702cXsPi2AhcQBJIgmPV73HjhIGeQDN0R4Aw
        MDsiDISB4wQOkM6PgKOdgSNmjha0EXAuDCSBJHAAzREzBwm+I+BEZ6An0BN8RsBxMJAEkuAvAs6CgSSQ
        hAARcBAMJIEkBI6AU2AgCSRBNwKOgIEk6OqAFRCB2IeBJFDoBiMQ4zCQBIM6YLUYdwaSQImbikDMOgNJ
        MKUDVo5ZZyAJFLeFCMSgM5AECzrgITHoDCSBsrYcgZhyBpJgWQc8MKacgSRQ0EFGIEacgSQEqQMeHiPO
        QBIo5ZBEIOqdgSSERAc8SdQ7A0mgiEMYgSh2BpIQQh3wVFHsDCSB8g15BKLSGUhCyHXAE0alM5AECjdM
        EYgyZyAJYdIBTxtlzkASKNmwRiBqnIEkhFUHPHnUOANJoFgjEIEocAaSEAEd8BJR4AwkgTKNWASkdgaS
        EDEd8EJSOwNJoEAjHAFJnYEkRFgHvJykzkASKE1bIiCdM5AEW3TAi0rnDCSBorQxAhI5A0mwUQe8tETO
        QBIoR9sjIIUzkATbdcAGSOEMJIFClCQCNjsDSZBEB2yGzc5AEihBqSJgmzOQBKl0wMbY5gwkgeKTMAI2
        OANJkFAHbJINzkASKDtpIxBRZyAJ0uqADYuoM5AECk7yCETIGUiC5Dpg8yLkDCSBUouKCITdGUhCVOiA
        jQy7M5AEiiyKIhBGZyAJUaQDNjWMzkASKK+oi0BYnIEkRJ0O2OCwOANJoLCiNAIhdgaSEKU6YLND7Awk
        gZKK6giEzBlIQlTrgI0PmTOQBIopBiIQAmcgCTGgA95CCJyBJFBGMROBoJyBJMSMDngjQTkDSbAsoLbj
        t7cZtTRu4NyWj7zzw36TL7/zFfyPr/EJPsdPLZ+ZBwYTAYvOQBJMBT3hrYOthnz0g9tGXnx11wsv/v4F
        ev9QBzVRH0fhWFPXYmXLEbACA0kwGO52UyvR2V/a4bfNvneRnv79/hzHXprUK27gBzibweuymrUImIaB
        JBgJdPzrO9CvX3jJ/1hmwPtAnA3nxJmNNIB1LETAHAwkQTfEbV/d+v3u/YOxgsD84Mw4P66i2xJWMBsB
        EzCQhMDBbTel4rKezzZrfkkI3cDfqXAVXAtXNPv7Zv0AETAKA0kILKMrn1nZPO7qCGCgvQSuiOtS36GK
        gCEYSEKgcGccv/zuV5v9V/MIkyAuh+vi6okZx0MlCCefRx8GkhBAHwmTD1x6Uw9bMNBeFG1AS5ys45Dc
        uw4MJCFAlOMn7Gpx1U22kyAagJagPSHRhGNPEggGkhBAFlgnbt4yURISRDMwhODqdTAk+4WBJATyhEml
        kR8uGwEPrYqfVBqMIJx8rG8YSEIATbRLP3RRu45GpGlLHbSNU67WkPYBA0kIPHf03yl32qJy3YvGX9ly
        6MM9F7//5y9Wr24/vcaaIJx8lCcMJCGwGi6/Z7yuKCNZ4cILm3XucO2rTz20MTP9u93z1fLaIi5Rm+4O
        zoOBJAQm4aoxWc2+1yKSWvd3rUsvuejOX3edNXHEgew5WgbUr+tLFvaay8lWczycg4Ek6Oy2mHa0Rdtk
        e0n4UZsr/vTg7Zl/f+lU0Sc+GdB+uKVgxTUzuBhnggc3DCRBN1f+YZ9JtpDQrFmzjknXvPzEA3lfpp8t
        /UKXAW2FlzO36d4XK6gRUGAgCbqCSPhL2YWXXhZJGJAI9b6t88zXh5Vv8J0IGaHi2M7M5HeP6t4dK4gI
        XEASjEjhst88FRkSrmx1+aAHeiyY/cLJ7fqJkBEepi/PN3KDrKPAwCjoRiBhcvmFl/wgfDAgEUq96eqX
        Hr8/Z8Fks4mQLg/VOzN/MpPmYGjkQBj0w/TDPhPDQcIlF7fodWvHv44fum/d33Q1HUyFVzhyMLbqQhj0
        YWje5voQwtAm7n8f7ffrL94dW7vt42AkbvzYHVuW67ofKzBN0ifhqudWh4SElBvbjx1x34Yv3gx5ImSE
        it7zyil33QjQGXR4uKzHKMswXHxRi9t/njb91SF7v33PiGTDV4fDaF0S6Az6ztDiyhvNwtDqissG3Per
        z9557sTWj8Knb1Nn3r6ZmZL+75rOEChGCW/suaBZM4MwdPhx4phhfdZ9/pfGEnNLY6Zkba3y2d3zU2cd
        MdI7OrkOYQgEQ6uhnwQm4aIWzXvcnDrtlcG7186yJtOIHTXgk91OFrqReycMgWC4/K5xPmFoefkP/tDn
        tk9mPFtTKEsipAvV5KWbjQjCyXUIQyAYvv/Th7Uw3HRdwnND71376SQJEyFdGOZnrXey0I3cO2EIBMPF
        7bu0aP69X/0seeqfB5WsfldXcDJXyNvENyzpjKEJQ6AAvTP99eot/5RZ4sbbVrZtqZHe0cl1CEMgGI7v
        yjSuNslr4l6cLHQj904YAsHQWLpAcokbbx5mV40Iwsl1CINTYAA2Tha6kXsnDE5Jk06XLDQiCCfXIQyB
        YNi/banxPETymlU7FjlZ6EbunTAEgqFo83LJJW68eTu3fGVEEE6uQxgCwbB8w1rjapO85qrsNU4WupF7
        JwyBYJi5YpPkEjfevA9W5RoRhJPrEIZAMDyzYIdxtUlec8zCIicL3ci9E4ZAMOABMcklbrx5fNhNlwfC
        EAgGvJHuxK4vjQtO2pq4C75djzDoP98UOEZL1mdJK3HjDcNd6EqBFegMOrSMnr/TuOakrTl6Pv+Uun63
        SBh0YtTh3aN1JQulVbmRhqH9uAt2/LoRIAz6HQYeizGiOWnr8LEeXQxEBcKgD0Pff5ZJK3QjDevz4T6D
        anB4NcKgDwMkgsfEjMhOwjp8wM044YTBEAz9P94jodCNNAktN64Gh9ckDIZggEqyclcbEZ9UddBmh+vb
        1O0TBqMw9PjgYENUPfiG1qLNptTg8MqEwSgMEErG8nypOv7AjUFrHS5us7dPGEzAcN1fq/FXA6OCB7QT
        rTWrBofXJwwmYIBWbnv/kPyvzEAL0U6HK9vC7RMGczAgxAM/LZV58IC2oYUWpMBDCINpGCCasQu3S5ss
        oW2UtbUIEAYrMCDW6cs2S8gDWmVNBzyK2zEskiCkg/daS8XDm3zPtrE/ZOiPfDpDUDw8v7BIhvED2oCW
        sHcPMgKEISgYEP0H/rW3omixjRaBq6MNQeqAhzNNCpYEoaG0WUdWZq+xhQdcF1enlEMSATpDaHhoP73m
        pS+31UTwrd24Fq6I64ZEBzwJnSHESuoyu+qjNdnhfnc3zo+r4FpUcGgjQGcIMQ/d3ip+fsrCgsXzGos/
        D3nihHNuWjT32fQFXd4qDq0OeDY6QwhIuCajuueknBfGzvr3yBH7Hun+3X3tRTk5IPn0zKENOaH5c+iN
        ue/hbDV/TD5+T7saV9nxYPd/Dhvx3POzfjMp5+oMbkMKwa+SzmAxiDe+fWjIy//+dORjRx5KVQHQfnHi
        nsRdvdru6Nm2bPjNR2c/Vr9upgWjaFw/8/ScJ048+Yvqu9upGIAEnLz23nNl//0pHw4fOfjlf6NV7OMt
        R4AwmIMhaeqBZ1+Ys3LIw6fv/7FPBrQf1vVJ3NM7HkgU92pb+tv4sn43VDzX69jbA09+8mLdivQz2bMb
        C+aeLfoYkOB/fN2QM/vM1+l1n754MmPQiRd+e+z3Nx1zMSAwEP8DAy0JJ+9NPHVvIv4/3Uf54ljf65cN
        fmj0C3PQTsuacOyBhMEQDO2nH39g/PIFw4ecMsCAloeGvu3335EAEkDF3t7xZb3j990Rj0/K70g4+LuE
        Q65ScWfC4TsTqu5qh3LkrnZH724HBlCEG6iGoGIA6asFAKCABFGAnyjV913/+bAh97+2HC13rLjN3jhh
        0IHhumlVY8e+V9L/F7o+4K/C2fvaQ+4gQWCgJQGfGydB5EX+MNCSUN8nUS07+/98zNjZuAuzynBgfcLg
        F4ab3j742piMQw93toyB9kD09IABhoBy4HduWxAkVN6l2ILwBGEL/kYIuoagxeBM30S1lD/Uedxz03BH
        DpS48VsmDD5guPHtijeefevogykhwUA9Cfr1ACSoCZIRErzzIn8YgId6VznTt33lgykTn5l849SDiRnH
        3YVrdpoIEIbzYECGPfrFD0LlBt4sIZvXjhNUT/AgQTtO0GZH/kYIKgmq9AUAKgYgob6Pu+x/sPOoF95v
        j9lYFQntFw7GgzCcgwHLBbkD7w6tG3ifDXpFUoTsSAyagYEgAYYgijprpE6eiuxIlwQtAGIYDQDqzi8q
        Eusfvev2CRsSpx1LVKgQpcku8IUjkSAMCgxYOJv47JT6fteFmwRx/sa+7TEw0M4daTFQ5k/va3/mo+Sz
        u7t9d7i7wXK2orsojYeU8sjNaWZL4ZrUbVmpRetSd6xP27khrTgnrSQ3rTSv4+68jns3dSzL77SvQCn7
        N3cq39LpQGGng1s77yz45dSlE679a4y81Zgw1PxsclH2oHsig4F6FUwxYarU54gZn5/5V7JBBtRqKgkN
        B3+KYpYE1N+albLdRcKubKUIDPZsPEcCMNCSABgObetcsb3zm0snx4aTOB2GkX/+qOaBn0SYhHNbNrBM
        dv7ckVhMMOUJ4MGDhPpySzCsTSlan7pjQypIgC14kwBDQBEMCAwOFymleMsvCYOh5Sppw4TU6J2nXrEL
        A/W6GPtqxwlidTkYWwAJdfutwCBypJ3ZqcU5iiegiNTInyEIEiqLulTt6CLtb9lUwxzqDDdMO7x02ADb
        SRANwJBaGIK6z8ICDBgnIDs6c0Ah4dS+btbSJJEjYajgGid4jhA8DAEYoBzZqRRTmpO2shNhSJ66f+PA
        30lCgjqk1s4dWYYBtnB6f7favVZgKFybsmNdWrEyWkgDCbAF7QhBkICiNQRBwtFdhCE6Z99Sp5RtGdBT
        KhJEYzCkxlKamEK1BoNqCyf2dLXiDGsxek51weC2BUwZiVkjrSeIvEhgIEg4VtxV2s7eVMOc5QzYy1nw
        aG8JSdAOIazBoOZIJ8u61ey2DkNpbsfdmEHK7yjGyqIIQxB5kZYEYCCKKc1JW9lBMFybcSRrcD+ZSVCH
        EKacQUwlAQY1Rzpeag2GFCwvlOQo06llBR0PFHZG0c4aaUkQhoBSXdIVl5NW36Ya5iAY8CCO/CS4W2h4
        rU2dV9XCAIFaSJMwm6QsL+QqtoDRAkiAJ4j5U38YCBIIQ5TNq44bMz1qSMAQwiQMYioJzoB5JAwYgoFh
        d15amWs6VdiCBwkYJKipkcAABVmZqQ5Y2sqOcIa7JmRFbKtFaJCzAwYsMmCtDTnSPteGC2ELPj1BiwHY
        Q5FW36YaFvswYD/2nv63hEajTQ/7h/1sdsCAqaQS5EibOu5XSOhUse284bJ2hCDcQGBAGKIpR3rvyRfC
        rt2QQxIeGPrfkvb8Iyn+hhPK6NkFQ7kyndrp8Hb3mpp2rKwOElQYsKaBYqoDlrZyjDtDr0k5Df2uIQwA
        YMAv0+amd1jzZVLGi8k+ecDoGZOq+woUGCowWtiuzKJ6zBqJBEm4ARgQ/2MyV1p9m2pYjMOQMyjszyeE
        hbRQO8PgHmmfvZu0NvMnWYuSvl2UNC89+Y+3eu7xBgx7NikwYOh82DVaUIfLqiFoEyThCSCBMERBpvTo
        uIVhUWrIkyLvEwYBAwTqMZs0vHfqorkdsjKTvl2ctG5x0oalSTlfdVjwt2QQorUIbEkq29SpfLMydAYM
        LltQVhK0w2WRHWkxwPwViqkOWNrKsewMmwf0choMYmOSdtFtVN/UFZ8mrV+atGFZh+xlHfKWJ29c4Spf
        J6/8NPmxO8/xgC1J+/KVeSTMqFYWdT6y89yamna4rLoBDEGQgItKq29TDYtZGB587atoJcH8OoO/Feix
        /VPXLlQYyF2eDAzyViRvWpmSvyql4BuU5C2rU3KWpI55yM0DdqruL1A2I2FGVdiC93BZHSSoJBCGKMiR
        Vgx9xJkwqHuTXh+eun5Jh9wVSoEP5K9MLlilAFC4JmXrWuV/8QADnvacMFzhQZlHUnKkToddG5DUrRYe
        E0ceGMAW6AxS89AlvbSh3/85BAaxI0P7MAMymZkvpyEX2rRSKQWrUgQDUP/2bxUAlOJ60Fk84Vmc3XHm
        S2mwhYOKLXSpdG1KhS0AA3+DBGEIKHh8AsVUNiJt5dhMk16Nrs0XwQ2gBQzYkYEt3GKvHjpv5P2bv0nZ
        vFqxgq1uDNLU55vFw/6u5/3dj3fi6YUDrtGCYguuPRcCBnUWVcwaaccJhEFqQ1C7nMg/4B9iFzIzm6TC
        ILYniSfdoFqk/rAC4QZYXVYeYcvBPjxlwwUyIsyi4n/xEI8ybkaCVKgkSLAFsbagXU/QYuDhCbgcLipt
        Z2+qYTHoDHh8JyoX2rT+YBUGYQ4QKLptqBZ9/M71qSjYmI3tqOdedbHZ9UhngcKAwOBcgrRLgUEMnYUt
        +PQEkR0JEgiDvBYx6OXP8e7rqC6mdq16vB1D5UGI9VhJV/GeC1gBnlJQ3nBR6C5YTxD7tF0PLSieAHgE
        CWK0oK4nqFOo2tRIYEAY5CUBtvjWyLHiZdfRWyzDIPZyi8G0WiBrrCu7SHBLH1NGh5qeX1M2ae9wD5pV
        T3CNFtwLzLok4EKmshFpK8dgmvRl/3uiFwPRcrMwaM1BvFFPIIEivkUfDxLUJ9ewI1Xsw8PiGop4klMM
        mrW2oA4VhCGoc0daTxDISatvUw2LQRiWP9wzu1/3qC6WYfB4ySQwUD9BB68+168+peDCoCvW19QlNuEJ
        whaEJ/gcMYMHrfmY0py0lWMQBmljbbxhFmAQh6jS9/4CP0XX7vFQv9h9pF1f8zdU8Bgxa2GA/xi/NZlr
        EgYZxz+WYdC+etXnSaBpkRSJ+VORF4m5I4/1NW9P8M6OYA4iGZNZ4sbbRhhiE4YAOIEHkCDGyioGuiSo
        s6genkAYZBSQ8Q5A/prBO0PgM0DQHqmRdmN24OkjdaigjtHpDOQhjBEINww4P3hQJ46CtAUM0+XvX4y0
        kGlSGDVt5Bfgs04EYMAl0Mf724qnnUhVEyTt9JHH1K3lO5XqQMLgXBgED95PrgUmQZsdiUUMOoOMGpKq
        mwmmMZFxBnEV8KA+vOYxg6ROHwXwBMJAEsIbgUjCgGuhs/dYbNZuwvNYX/NIkAhDeKUQTJ8aG8dGGAbB
        g+5Ks08MCANhCG8EIg+D4EHdfeQ9aPY5VOCYIbw6iI2uPci7sAUGXBTi1m678LmkoAKgfoGtH0HerySH
        czZJRrbtguGOHrdB4vhfLeABX8MW1E9EBS0JhEFGDUnSwQTfDBthwKUJA8UtUQSiBQZ1b2zw/MtwBqZJ
        EjGgCkIeGESC5DNN0u4Sl0HKwbeBMBAGZelNFOjeI03yB4PH8xLBC1GGMxAGGWHA8NQWc/CGAaL36Qxa
        GBoOcjYpOv8OtAw9kG4bsF9IEhiEUXinSVoY+AcOZexQdUUWLRXwQhfwYJc/eHMo3tgniocnYN8r/hpi
        tAQ2cDuZJslI9baNt0JhUhW8dAzv3lNev1fgWbbm3UoYZJRRbPxW0hdPkIoE0RhvDMQnkzLfjI2w0xlk
        RPraGUfTl7y+XT5/8EBiW96t6YtfR2sJg4wyio3fCu/ClgjQGYg0I+COAGGgFBgBwsB1Ekbg/AjQGdgv
        MgJ0BvaLjIAmAm3Hl9EZ2C8yAjUgoc3TBYSBUnB6BAQJhMHpOrBlOl+qi6okEAbC4OgIaEkgDI6WglQ9
        dOQb40ECYSAMDo2ANwmEwaFSiHw3LNUVfZJAGAiD4yLgjwTC4DgpSNVDR74xAUggDITBQREITAJhcJAU
        It8NS3VFXRIIA2GIhghkHE8MUAzssDJCAmGIBikY+GVL1QeHrDFuAKoTM6oTpx1rN+2oR8GHyo+U4qLF
        T6AMkkAYCIOUEVAxmHbshhlHhi+qnpdfu7G8rrK2sa7hLAq+wLf4ED9ChSYqfCBhnATCIKUUHGsFuPEm
        DGACt8w5+uHm2tr6s98F/IcKqIbKOMTDJUyRQBgIg0wRUEhQMqLrMo5M31BT36CDgZYRVJ6RXYMDVZcw
        SwJhkEkKTjYEtydUK4bw96rCQ/WB3cDfT3HgLXOqcJK2r+1p83S+2JhtvPB5BvIgQQRcngAR9/pH1eET
        DdZIEEfh8Nvf2d3mqY1tRm8yywNhkEAK9AQXCbf8/XBlbVAkCB4qa+q7vZZvgQfCQBhsjUCTJ1w/rWLr
        obpgPEF7bOG+mnbP5JjlgTDYKgWHe4IYKmANYUrljPXVoSJBnGfasr2tR+WYSpYIA2GwLwLCFt4+cvPs
        Q2caTcwdGcEG80tdx+W1eSrPOA+EwT4p0BYyjiuLylMqPtwUYlsQtMzLKm/95AYlWTI2s0QYCINNEWiy
        hRum7q+tb/To7LV7K9QfZe46Iz7HF+qHPmuKn9aebrh69Drj5kAYbJICbcE9Wjg87ItD3mmPt8SPnDrb
        8W8nxOf4ouqkO60KAANOO+i9wtajsg1mSoSBMNgUAddood1bB+dtPGoEhqFLTml1j2/FUYFh+GB1Wesn
        1jeZg84CHGGwSQoOdwaRI02tSvhLWd6+Wl0Y1ARJK32RLAWGIbfkaKuRa1qPyjViDoSBMNgRAZEjTa2M
        f2NPVe25AYD3SGD0itPaBGnQolMo2mQJFVQevKGqqqlrNfIbg3OshMEOKTjcFlzLC655pMPxk0p9bsgT
        +u75r9qTZ75TE6Qb3z1RXnP2QM1ZfCEq4EeogGriW28Y6s40thq+qvWT2UbmlAgDYbAjAioME4v9wZA0
        60TJ0UZtgjQ7372B7738etUNUAHVUNk/DCsJgx2/Y3b5BiOggaGq1sce1fau+VNtgtT741p1Tze+wLdq
        slR58uyi4jM4xFeadLrVcMJg8LfCarZE4BwMJXl7fYh43JrTULaaIF0zo2ZzxXlrEfgWH6rJEiqPW6sc
        4vEvp7iKMNAW5I6AZswwL6fCW8RYhdMmSK+42PD4hw+1yZLXwp1S/f1Vpa1GcMxgS4fHixqMgArDG3uG
        fFzqI705eW6Jrdv7J074evgTD3ziR9pkyfs8A9/JaTViNccMcneNBkUTq9WaplYT3tz/4wmFtXWejzFo
        l9iWlPiYexW6X1ri3qAhZpY8YDhZ15D42NLWj2VxapUwSByBpkU3rEDHjy/6R/ZB7049+E/mriqJG7K8
        9RPruOgmsRRitb83dV9iO8aUiviJpf8/ZcsZM4//G+GkvqGxy5ivmhYZxEZubscw9Rti5YhFQM2UJpe3
        Hbc1Y1WZEYkbr/N25va4Py02niPx7Rh0D/si0LSFu136ofiJJde8umlruY85VuPq19Ys3HskfujCOKww
        PIHnGYw+38MVaPvUELE+WNoLiTmlqZUJkw9g5NB98sbKmhA8Bl1ZfarzM4vjhnzV+vFvlaEzH+4J2Rs/
        pVVSDDRMNYcpFdi+2nZc4W0TsyqOnbTmBuIoHH7rS8viBi9q/dha14yqUVtgmkRbsDsC7pFDFZKlq8bm
        xw3O7PR05pY9R6zxgANxOE7SasQ3eIzB4CSSOrBmmmS3GmKggw/mFppeFfOjV4ohX4gYnfqPBn02dcEW
        TAcZRwKVcQgOxOFNJPBVMcH8YnisLRHIOK68DfKpjcjvFR5Gro4bsqzlgM87j17w/oodJ0/7XXETqJyq
        a/jg652ojENwIA53eYJpEpgm0Rbsj4DrDcH5yjqAm4cNrR/Pihv2ddygzJZ/+Cxh0MePTvtmzvKi3F0V
        h6tPwQFQ8AW+xYf4ESqgGirjEByI6SNrJBAG+6Xg8IG+5l3ZKg+5GPi2fnydYhFDV8T9aUnLgfMh95b9
        P7ri9x9e8fA/lPL7D/Gt8uHA+aiAaoohPL5OORBPeFp60SphIAx2RsDrrfEuHhSLyHOlTLCIdZgUUgYS
        oGLoV3FDlirSR8EX+BYMYKCMWSNUcxuCa+7I/CuHxRiaA2g71eBkW/Dz9xPwHnm3RbiRQGePMQDkjkUD
        ZEHnCr4FA+tdboARAl6ep7552/TL6AkDMbAtAnp/SaQJCbdL5CpGAdF7FHyoJEVaN7CIAWGwTQpONgTc
        ux4J6nY6DRKu4bVnERmROykKCgPCQBhsiIBhErQ7TF1U+C0m/jZP4I2rHDPYIAjHOoMlEkKmdW7hptZl
        iYDkJHA2SRahxLxXyE8CYSAMkYhAVJBAGCIhhZjv9QPfYLSQQBgIQ3gjEEUkEIbwSoGeoDuBI1UFTq2S
        h7BEILo8QTD5H+4hA+Msh732AAAAAElFTkSuQmCC
</value>
  </data>
</root>